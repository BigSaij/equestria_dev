add_namespace = katzen_AF


country_event = { #Kaiser pops up
	id = katzen_AF.1
	immediate = {log = "[GetDateText]: [Root.GetName]: event katzen_AF.1"}
	title = katzen_AF.1.t
	desc = katzen_AF.1.d
	picture = GFX_event_griffon_back
	
	is_triggered_only = yes
	
	option = { 
		name = katzen_AF.1.a
		hidden_effect = {
			ABY_AF_kaiser_kattail = {
				promote_leader = yes
				add_country_leader_role = {
					promote_leader = yes
					country_leader = {
						ideology = fascism_ideology
						expire = "1965.1.1.1"
					}
				}
			}
		}
	}
}
country_event = { #gaslighting done
	id = katzen_AF.2
	immediate = {log = "[GetDateText]: [Root.GetName]: event katzen_AF.2"}
	title = katzen_AF.2.t
	desc = katzen_AF.2.d
	picture = GFX_event_griffon_back
	
	is_triggered_only = yes
	
	option = {
		name = katzen_AF.2.a
	}
}

country_event = { #deciding which way
	id = katzen_AF.3
	immediate = {log = "[GetDateText]: [Root.GetName]: event katzen_AF.3"}
	title = katzen_AF.3.t
	desc = katzen_AF.3.d
	picture = GFX_event_griffon_back
	
	is_triggered_only = yes
	
	option = { #west zebrica
		name = katzen_AF.3.a
		set_country_flag = ABY_AF_west_zebrica_endgame
		mark_focus_tree_layout_dirty = yes
	}
	option = { #equus
		name = katzen_AF.3.b
		set_country_flag = ABY_AF_west_zebrica_endgame
		mark_focus_tree_layout_dirty = yes
	}
	option = { #griffonia
		name = katzen_AF.3.c
		set_country_flag = ABY_AF_west_zebrica_endgame
		mark_focus_tree_layout_dirty = yes
	}
}
country_event = { #kaiser ruminating
	id = katzen_AF.4
	immediate = {log = "[GetDateText]: [Root.GetName]: event katzen_AF.4"}
	title = katzen_AF.4.t
	desc = katzen_AF.4.d
	picture = GFX_event_griffon_back
	
	is_triggered_only = yes
	
	option = {
		name = katzen_AF.4.a
		add_political_power = 150
	}
}
country_event = { #meeting posada
	id = katzen_AF.5
	immediate = {log = "[GetDateText]: [Root.GetName]: event katzen_AF.5"}
	title = katzen_AF.5.t
	desc = katzen_AF.5.d
	picture = GFX_event_griffon_back
	
	is_triggered_only = yes
	
	option = { #yay
		name = katzen_AF.5.a
		set_country_flag = HIP_posada_joined_govt
		custom_effect_tooltip = HIP_posada_joins_tt
	}
}
country_event = { #kaiser dreams of things to come
	id = katzen_AF.6
	immediate = {log = "[GetDateText]: [Root.GetName]: event katzen_AF.6"}
	title = katzen_AF.6.t
	desc = katzen_AF.6.d
	picture = GFX_event_griffon_back
	
	is_triggered_only = yes
	
	option = {
		name = katzen_AF.6.a
	}
}
country_event = { #ships done
	id = katzen_AF.7
	immediate = {log = "[GetDateText]: [Root.GetName]: event katzen_AF.7"}
	title = katzen_AF.7.t
	desc = katzen_AF.7.d
	picture = GFX_event_griffon_back
	
	is_triggered_only = yes
	
	option = { #yay
		name = katzen_AF.7.a
		if = {
			limit = {
				has_dlc = "Man the Guns"
			}
			hidden_effect = {
				set_technology = {
					basic_ship_hull_light = 1
					improved_ship_torpedo_launcher = 1
				}
				create_equipment_variant = {
					name = "Herzogkatzenschiff Class"
					type = ship_hull_light_2
					parent_version = 0
					modules = {
						fixed_ship_battery_slot = ship_light_battery_1
						fixed_ship_anti_air_slot = empty
						fixed_ship_fire_control_system_slot = ship_fire_control_system_0
						fixed_ship_radar_slot = empty
						fixed_ship_engine_slot = light_ship_engine_2
						fixed_ship_torpedo_slot = ship_torpedo_2
						mid_1_custom_slot = ship_torpedo_2
						rear_1_custom_slot = ship_torpedo_2
					}
				}
				create_equipment_variant = {
					name = "Katzenkriegbaron Class"
					type = ship_hull_cruiser_1
					parent_version = 0
					modules = {
						fixed_ship_battery_slot = ship_light_medium_battery_1
						fixed_ship_anti_air_slot = empty
						fixed_ship_fire_control_system_slot = ship_fire_control_system_0
						fixed_ship_radar_slot = empty
						fixed_ship_engine_slot = cruiser_ship_engine_1
						mid_1_custom_slot = ship_torpedo_2
						mid_2_custom_slot = ship_torpedo_2
						rear_1_custom_slot = ship_light_medium_battery_1
					}
				}
				for_loop_effect = {
					end = 40
					create_ship = { type = ship_hull_light_2 equipment_variant = "Herzogkatzenschiff Class" creator = ROOT }
				}
				for_loop_effect = {
					end = 10
					create_ship = { type = ship_hull_cruiser_1 equipment_variant = "Katzenkriegbaron Class" creator = ROOT }
				}					
			}
			else = {
				set_technology = {
					basic_destroyer = 1
					early_light_cruiser = 1 
				}
				for_loop_effect = {
					end = 40
					create_ship = { 
						type = basic_destroyer 
						name = "Herzogkatzenschiff Class" 
						creator = ROOT 
					}
				}
				for_loop_effect = {
					end = 10
					create_ship = { 
						type = early_light_cruiser 
						name = "Katzenkriegbaron Class" 
						creator = ROOT 
					}
				}		
			}
		}
	}
}
country_event = { #they find the relic
	id = katzen_AF.81
	immediate = {log = "[GetDateText]: [Root.GetName]: event katzen_AF.8"}
	title = katzen_AF.81.t
	desc = katzen_AF.81.d
	picture = GFX_event_griffon_back
	
	is_triggered_only = yes
	
	option = {
		name = katzen_AF.81.a
		custom_effect_tooltip = katzen_AF.81_tt
		add_to_variable = {
			var = ABY_AF_aeternum_relics_available
			value = 1
		}
	}
}
country_event = { #lob nukes at the fuckers in the abyss
	id = katzen_AF.10
	immediate = {log = "[GetDateText]: [Root.GetName]: event katzen_AF.10"}
	title = katzen_AF.10.t
	desc = katzen_AF.10.d
	picture = GFX_event_griffon_back
	
	is_triggered_only = yes
	
	option = {
		name = katzen_AF.10.a
		add_political_power = 1
	}
}

country_event = { #zebrica war debug event
	id = katzen_AF.99997
	immediate = {log = "[GetDateText]: [Root.GetName]: event katzen_AF.99997"}
	title = katzen_AF.99997.t
	desc = katzen_AF.99997.d
	picture = GFX_event_griffon_back
	
	is_triggered_only = yes
	
	option = {
		name = katzen_AF.99997.a
		hidden_effect = {
				every_other_country = {
					limit = {
						is_zebrican_continent_country = yes
					}
					declare_war_on = {
						target = ABY
						type = annex_everything
					}
					add_ideas = ABY_AF_AI_country_gigawar_buff_idea
				}
		}
	}
}


country_event = { #debug event for spawning in dams
	id = katzen_AF.99999
	immediate = {log = "[GetDateText]: [Root.GetName]: event katzen_AF.99999"}
	title = katzen_AF.99999.t
	desc = katzen_AF.99999.d
	picture = GFX_event_griffon_back
	
	is_triggered_only = yes
	
	option = {
		name = katzen_AF.99999.a
		create_entity = {
			entity = tno_reference
			id = 9999999
			var = zebtropa_i_dam
			x = 11.3
			y = -1.5
			z = -0.1
			state = 869
			province = 14632
			scale = 1.0
			rotation = 2.5
			min_zoom = 3000.0
		}
	}
	option = {
		name = katzen_AF.99999.b
		create_entity = {
			entity = tno_reference
			id = 9999998
			var = zebtropa_i_dam
			x = 28
			y = 8.2
			z = -0.1
			state = 869
			province = 14632
			scale = 1.1
			rotation = 1.5
			min_zoom = 3000.0
		}
	}
}
country_event = { #debug event for reactivating dockyard decisions
	id = katzen_AF.99998
	immediate = {log = "[GetDateText]: [Root.GetName]: event katzen_AF.99998"}
	title = katzen_AF.99998.t
	desc = katzen_AF.99998.d
	picture = GFX_event_griffon_back
	
	is_triggered_only = yes
	
	option = {
		name = katzen_AF.99998.a
		activate_targeted_decision = { target = 695 decision = ABY_AF_giga_shipyards_decision }
		activate_targeted_decision = { target = 696 decision = ABY_AF_giga_shipyards_decision }
		activate_targeted_decision = { target = 693 decision = ABY_AF_giga_shipyards_decision }
		activate_targeted_decision = { target = 692 decision = ABY_AF_giga_shipyards_decision }
		activate_targeted_decision = { target = 784 decision = ABY_AF_giga_shipyards_decision }
		activate_targeted_decision = { target = 1199 decision = ABY_AF_giga_shipyards_decision }
		activate_targeted_decision = { target = 1198 decision = ABY_AF_giga_shipyards_decision }
		activate_targeted_decision = { target = 1197 decision = ABY_AF_giga_shipyards_decision }
		activate_targeted_decision = { target = 1196 decision = ABY_AF_giga_shipyards_decision }
		activate_targeted_decision = { target = 1195 decision = ABY_AF_giga_shipyards_decision }
		activate_targeted_decision = { target = 1994 decision = ABY_AF_giga_shipyards_decision }
		activate_targeted_decision = { target = 1193 decision = ABY_AF_giga_shipyards_decision }
		activate_targeted_decision = { target = 4 decision = ABY_AF_giga_shipyards_decision }
	}
	option = {
		name = katzen_AF.99999.b

	}
}