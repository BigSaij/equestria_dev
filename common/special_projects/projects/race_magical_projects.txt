#########################
#########################

  ###   ##  #   # #   #
 #   # #  # ##  #  # #
 ####  #  # # # #   #
 #     #  # #  ##   #
 #      ##  #   #   #

#########################
#########################

sp_cloud_carrier = { ## Cloud Carrier
	specialization = specialization_magical
	#icon = GFX_sp_cloud_carrier

	project_tags = {
		sp_tag_magical
	}

	resource_cost = {
		resources = { 
			crystals = 3
		 }
	}

	allowed = {
		NOT = {
			tag = NIM
		}
	}

	visible = {
		FROM = {
			is_pony_race = yes
		}
	}

	available = {
		FROM = {
			has_tech = early_carrier
		}
	}

	ai_will_do = {
		base = 1
	}

	complexity = sp_complexity.medium
	prototype_time = sp_time.prototype.medium
	breakthrough_cost = {
		specialization_magical = 1
	}


	project_output = {

		enable_equipments = {
			limit = {
				has_dlc = "Man the Guns"
			}
			ship_hull_cloud_carrier
		}

		enable_equipments = {
			limit = {
				NOT = {
					has_dlc = "Man the Guns"
				}
			}
			carrier_cloud
		}

	}

	generic_prototype_rewards = {
		sp_magical_generic_reward_scientist_xp_1
		sp_magical_generic_reward_scientist_xp_2
		sp_magical_generic_reward_scientist_xp_3
		sp_magical_generic_reward_major_progress_1
		sp_magical_generic_reward_major_progress_2
		sp_magical_generic_reward_major_progress_3
		sp_magical_generic_reward_test_failure_1
		sp_magical_generic_reward_test_failure_2
		sp_magical_generic_reward_test_failure_3
		sp_magical_generic_reward_magical_tech_1
		sp_magical_generic_reward_magical_tech_2
		sp_magical_generic_reward_magical_tech_3
		sp_magical_generic_reward_race_tech_1
		sp_magical_generic_reward_race_tech_2
		sp_magical_generic_reward_race_tech_3
		sp_magical_generic_reward_resource_scarcity
		sp_magical_generic_reward_critical_failure
	}
}

sp_pegasi_void_suit = { ## Pegasi High-Altitude Gear
	specialization = specialization_magical
	#icon = GFX_sp_pegasi_void_suit

	project_tags = {
		sp_tag_magical
	}

	resource_cost = {
		resources = { 
			crystals = 3
		 }
	}

	visible = {
		FROM = {
			is_pony_race = yes
		}
	}

	available = {
		FROM = {
			has_tech = tech_pegasi3
		}
	}

	ai_will_do = {
		base = 1
	}

	complexity = sp_complexity.medium
	prototype_time = sp_time.prototype.medium
	breakthrough_cost = {
		specialization_magical = 1
	}


	project_output = {

		enable_equipments = {
			pegasus_void_suit
		}

		country_effects = {
			custom_effect_tooltip = {
				localization_key = SP_UNLOCK_TECH
				TECH = tech_magical_pegasus_void_suit
			}
			set_technology = {
				tech_magical_pegasus_void_suit = 1
				popup = no
			}
		}

		sub_unit_bonus = {
			pegasi = {
				max_organisation = 5
				air_attack = 7000
				soft_attack = 0.1
				defense = 0.1
			}
		}

	}

	generic_prototype_rewards = {
		sp_magical_generic_reward_scientist_xp_1
		sp_magical_generic_reward_scientist_xp_2
		sp_magical_generic_reward_scientist_xp_3
		sp_magical_generic_reward_major_progress_1
		sp_magical_generic_reward_major_progress_2
		sp_magical_generic_reward_major_progress_3
		sp_magical_generic_reward_test_failure_1
		sp_magical_generic_reward_test_failure_2
		sp_magical_generic_reward_test_failure_3
		sp_magical_generic_reward_magical_tech_1
		sp_magical_generic_reward_magical_tech_2
		sp_magical_generic_reward_magical_tech_3
		sp_magical_generic_reward_race_tech_1
		sp_magical_generic_reward_race_tech_2
		sp_magical_generic_reward_race_tech_3
		sp_magical_generic_reward_resource_scarcity
		sp_magical_generic_reward_critical_failure
	}

	unique_prototype_rewards = {

		sp_pegasi_void_suit_choice_reward = {
			fire_only_once = yes

			threshold = { 
				min = 35
				max = 50
			}

			weight = {
				
			}

			option = { ## speed boost
				token = sp_pegasi_void_suit_speed_choice

				iteration_output = {
					sub_unit_bonus = {
						pegasi = {
							maximum_speed = 0.1
						}
					}
				}
			}

			option = { ## breakthrough boost
				token = sp_pegasi_void_suit_breakthrough_choice

				iteration_output = {
					sub_unit_bonus = {
						pegasi = {
							breakthrough = 0.15
						}
					}
				}
			}

			option = { ## strength boost
				token = sp_pegasi_void_suit_strength_choice

				iteration_output = {
					sub_unit_bonus = {
						pegasi = {
							max_strength = 0.25
						}
					}
				}
			}

		}

	}
}

####################################
####################################

  ###   ###  # #### #### ##  #   #
 #      #  # # #    #   #  # ##  #
 #  ##  ###  # ###  ### #  # # # #
 #   #  # #  # #    #   #  # #  ##
  ###   #  # # #    #    ##  #   #

####################################
####################################

sp_heavy_knight_armor = { ## Heavy-Magitek Knight Armor
	specialization = specialization_magical
	#icon = GFX_sp_heavy_knight_armor

	project_tags = {
		sp_tag_magical
	}

	resource_cost = {
		resources = { 
			crystals = 3
		 }
	}

	visible = {
		FROM = {
			is_griffon_race = yes
		}
	}

	available = {
		FROM = {
			has_idea = griffon_race
			has_tech = tech_knights3
		}
	}

	ai_will_do = {
		base = 1
	}

	complexity = sp_complexity.medium
	prototype_time = sp_time.prototype.medium
	breakthrough_cost = {
		specialization_magical = 1
	}


	project_output = {

		enable_equipments = {
			griffon_knight_armor
		}

		country_effects = {
			custom_effect_tooltip = {
				localization_key = SP_UNLOCK_TECH
				TECH = tech_magical_heavy_knight_armor
			}
			set_technology = {
				tech_magical_heavy_knight_armor = 1
				popup = no
			}
		}

	}

	generic_prototype_rewards = {
		sp_magical_generic_reward_scientist_xp_1
		sp_magical_generic_reward_scientist_xp_2
		sp_magical_generic_reward_scientist_xp_3
		sp_magical_generic_reward_major_progress_1
		sp_magical_generic_reward_major_progress_2
		sp_magical_generic_reward_major_progress_3
		sp_magical_generic_reward_test_failure_1
		sp_magical_generic_reward_test_failure_2
		sp_magical_generic_reward_test_failure_3
		sp_magical_generic_reward_magical_tech_1
		sp_magical_generic_reward_magical_tech_2
		sp_magical_generic_reward_magical_tech_3
		sp_magical_generic_reward_race_tech_1
		sp_magical_generic_reward_race_tech_2
		sp_magical_generic_reward_race_tech_3
		sp_magical_generic_reward_resource_scarcity
		sp_magical_generic_reward_critical_failure
	}

	unique_prototype_rewards = {

		sp_heavy_knight_armor_choice_reward = {
			fire_only_once = yes

			threshold = { 
				min = 35
				max = 50
			}

			weight = {
				
			}

			option = { ## increase stats at the cost of IC, lowered reliability & knights using more supplies
				token = sp_heavy_knight_armor_upgrade_choice

				iteration_output = {
					equipment_bonus = {
						griffon_knight_armor = {
							reliability = -0.10
							build_cost_ic = 0.45
							defense = 5
							breakthrough = 0.05
							hardness = 0.05
							armor_value = 10
							instant = yes
						}
					}
					sub_unit_bonus = {
						knights = {
							supply_consumption = 0.1
						}
					}
				}
			}

			option = { ## opt out of bonus, focus on improving reliability
				token = sp_heavy_knight_armor_no_choice

				iteration_output = {
					equipment_bonus = {
						griffon_knight_armor = {
							reliability = 0.10
							instant = yes
						}
					}
				}
			}

		}

	}
}

sp_universal_translator = { ## Universal Translator
	specialization = specialization_magical
	#icon = GFX_sp_heavy_knight_armor

	project_tags = {
		sp_tag_magical
	}

	resource_cost = {
		resources = { 
			crystals = 3
		 }
	}

	visible = {
		FROM = {
			is_griffon_race = yes
		}
	}

	available = {
		FROM = {
			has_idea = griffon_race
			has_tech = tech_griffon_misc_a
		}
	}

	ai_will_do = {
		base = 1
	}

	complexity = sp_complexity.medium
	prototype_time = sp_time.prototype.medium
	breakthrough_cost = {
		specialization_magical = 1
	}


	project_output = {

		country_effects = {
			hidden_effect = {
				if = {
					limit = {
						NOT = {
							has_global_flag = sp_universal_translator_event
						}
					}
					news_event = spnews.1
					set_global_flag = sp_universal_translator_event
				}
			}
			set_country_flag = sp_universal_translator_completed
			custom_effect_tooltip = sp_explain_universal_translator
			add_dynamic_modifier = {
				modifier = griffon_universal_translator_modifier 
			}
			sp_calculate_regionan_capital_amount = yes
		}

	}

	generic_prototype_rewards = {
		sp_magical_generic_reward_scientist_xp_1
		sp_magical_generic_reward_scientist_xp_2
		sp_magical_generic_reward_scientist_xp_3
		sp_magical_generic_reward_major_progress_1
		sp_magical_generic_reward_major_progress_2
		sp_magical_generic_reward_major_progress_3
		sp_magical_generic_reward_test_failure_1
		sp_magical_generic_reward_test_failure_2
		sp_magical_generic_reward_test_failure_3
		sp_magical_generic_reward_magical_tech_1
		sp_magical_generic_reward_magical_tech_2
		sp_magical_generic_reward_magical_tech_3
		sp_magical_generic_reward_race_tech_1
		sp_magical_generic_reward_race_tech_2
		sp_magical_generic_reward_race_tech_3
		sp_magical_generic_reward_resource_scarcity
		sp_magical_generic_reward_critical_failure
	}

}

##########################
##########################

 #### #### ###  ###   ##
   #  #    #  # #  # #  #
  #   #### ###  ###  ####
 #    #    #  # # #  #  #
 #### #### ###  #  # #  #

##########################
##########################

sp_alchemical_toolbelt = { ## Alchemical Toolbelt
	specialization = specialization_magical
	#icon = GFX_sp_heavy_knight_armor

	project_tags = {
		sp_tag_magical
	}

	resource_cost = {
		resources = { 
			crystals = 3
		 }
	}

	visible = {
		FROM = {
			is_zebra_race = yes
		}
	}

	available = {
		FROM = {
			has_idea = zebra_race
			has_tech = tech_spirit_warriors3
		}
	}

	ai_will_do = {
		base = 1
	}

	complexity = sp_complexity.medium
	prototype_time = sp_time.prototype.medium
	breakthrough_cost = {
		specialization_magical = 1
	}


	project_output = {

		enable_equipments = {
			zebra_alchemical_toolbelt
		}

		country_effects = {
			custom_effect_tooltip = {
				localization_key = SP_UNLOCK_TECH
				TECH = tech_magical_alchemical_toolbelt
			}
			set_technology = {
				tech_magical_alchemical_toolbelt = 1
				popup = no
			}
		}

	}

	generic_prototype_rewards = {
		sp_magical_generic_reward_scientist_xp_1
		sp_magical_generic_reward_scientist_xp_2
		sp_magical_generic_reward_scientist_xp_3
		sp_magical_generic_reward_major_progress_1
		sp_magical_generic_reward_major_progress_2
		sp_magical_generic_reward_major_progress_3
		sp_magical_generic_reward_test_failure_1
		sp_magical_generic_reward_test_failure_2
		sp_magical_generic_reward_test_failure_3
		sp_magical_generic_reward_magical_tech_1
		sp_magical_generic_reward_magical_tech_2
		sp_magical_generic_reward_magical_tech_3
		sp_magical_generic_reward_race_tech_1
		sp_magical_generic_reward_race_tech_2
		sp_magical_generic_reward_race_tech_3
		sp_magical_generic_reward_resource_scarcity
		sp_magical_generic_reward_critical_failure
	}

	unique_prototype_rewards = {

		sp_alchemical_toolbelt_choice_reward = {
			fire_only_once = yes

			threshold = { 
				min = 35
				max = 50
			}

			weight = {
				
			}

			option = { ## focus on offence
				token = sp_alchemical_toolbelt_offence_choice

				iteration_output = {
					equipment_bonus = {
						zebra_alchemical_toolbelt = {
							build_cost_ic = 0.15
							reliability = -0.05
							instant = yes
						}
					}
					sub_unit_bonus = {
						spirit_warriors = {
							soft_attack = 0.15
							maximum_speed = 0.1
						}
					}
				}
			}

			option = { ## focus on survivability
				token = sp_alchemical_toolbelt_defence_choice

				iteration_output = {
					equipment_bonus = {
						zebra_alchemical_toolbelt = {
							build_cost_ic = 0.15
							reliability = -0.05
							instant = yes
						}
					}
					sub_unit_bonus = {
						spirit_warriors = {
							max_strength = 3
							defense = 10
						}
					}
				}
			}

		}

	}
}

sp_starmetal = { ## Starmetal  !!!! AVAILABLE FOR YAK RACE ALSO !!!!
	specialization = specialization_magical
	#icon = GFX_sp_heavy_knight_armor

	project_tags = {
		sp_tag_magical
	}

	resource_cost = {
		resources = { 
			crystals = 3
		 }
	}

	visible = {
		FROM = {
			OR = {
				is_zebra_race = yes
				is_yak_race = yes
			}
		}
	}

	available = {
		FROM = {
			OR = {
				AND = {
					has_idea = zebra_race
					has_tech = zebra_ancient_steel
				}
				AND = {
					has_idea = yak_race
					has_tech = tech_yak_unkillable
				}
			}
		}
	}

	ai_will_do = {
		base = 1
	}

	complexity = sp_complexity.medium
	prototype_time = sp_time.prototype.medium
	breakthrough_cost = {
		specialization_magical = 1
	}


	project_output = {

		country_effects = {
			custom_effect_tooltip = {
				localization_key = SP_UNLOCK_TECH
				TECH = tech_magical_starmetal
			}
			set_technology = {
				tech_magical_starmetal = 1
				popup = no
			}
		}

	}

	generic_prototype_rewards = {
		sp_magical_generic_reward_scientist_xp_1
		sp_magical_generic_reward_scientist_xp_2
		sp_magical_generic_reward_scientist_xp_3
		sp_magical_generic_reward_major_progress_1
		sp_magical_generic_reward_major_progress_2
		sp_magical_generic_reward_major_progress_3
		sp_magical_generic_reward_test_failure_1
		sp_magical_generic_reward_test_failure_2
		sp_magical_generic_reward_test_failure_3
		sp_magical_generic_reward_magical_tech_1
		sp_magical_generic_reward_magical_tech_2
		sp_magical_generic_reward_magical_tech_3
		sp_magical_generic_reward_race_tech_1
		sp_magical_generic_reward_race_tech_2
		sp_magical_generic_reward_race_tech_3
		sp_magical_generic_reward_resource_scarcity
		sp_magical_generic_reward_critical_failure
	}

	unique_prototype_rewards = {

	}
}

##############################################
##############################################

 #  # # ###  ###   ##   ###  ###  # #### ####
 #  # # #  # #  # #  # #     #  # # #    #
 #### # ###  ###  #  # #  ## ###  # ###  ###
 #  # # #    #    #  # #   # # #  # #    #
 #  # # #    #     ##   ###  #  # # #    #

##############################################
##############################################


######################################################
######################################################

  ###  #  #  ##  #   #  ###  #### #    # #   #  ###
 #     #  # #  # ##  # #     #    #    # ##  # #
 #  ## #### #### # # # #  ## ###  #    # # # # #  ##
 #   # #  # #  # #  ## #   # #    #    # #  ## #   #
  ###  #  # #  # #   #  ###  #### #### # #   #  ###

######################################################
######################################################


#########################
#########################

 #   # # ###  # #   #
 #  #  # #  # # ##  #
 ###   # ###  # # # #
 #  #  # # #  # #  ##
 #   # # #  # # #   #

#########################
#########################

sp_grand_astrological_orrery = { ## Grand Astrological Orrery
	specialization = specialization_magical
	#icon = GFX_sp_heavy_knight_armor

	project_tags = {
		sp_tag_magical
	}

	resource_cost = {
		resources = { 
			crystals = 3
		 }
	}

	visible = {
		FROM = {
			is_kirin_race = yes
		}
	}

	available = {
		FROM = {
			has_idea = kirin_race
			has_tech = tech_kirin_astrology3
		}
	}

	ai_will_do = {
		base = 1
	}

	complexity = sp_complexity.medium
	prototype_time = sp_time.prototype.medium
	breakthrough_cost = {
		specialization_magical = 1
	}


	project_output = {

		country_effects = {
			add_breakthrough_progress = {
				specialization = specialization_land
				value = 0.5
			}
			add_breakthrough_progress = {
				specialization = specialization_naval
				value = 0.5
			}
			add_breakthrough_progress = {
				specialization = specialization_air
				value = 0.5
			}
			add_breakthrough_progress = {
				specialization = specialization_nuclear
				value = 0.5
			}
		}

	}

	generic_prototype_rewards = {
		sp_magical_generic_reward_scientist_xp_1
		sp_magical_generic_reward_scientist_xp_2
		sp_magical_generic_reward_scientist_xp_3
		sp_magical_generic_reward_major_progress_1
		sp_magical_generic_reward_major_progress_2
		sp_magical_generic_reward_major_progress_3
		sp_magical_generic_reward_test_failure_1
		sp_magical_generic_reward_test_failure_2
		sp_magical_generic_reward_test_failure_3
		sp_magical_generic_reward_magical_tech_1
		sp_magical_generic_reward_magical_tech_2
		sp_magical_generic_reward_magical_tech_3
		sp_magical_generic_reward_race_tech_1
		sp_magical_generic_reward_race_tech_2
		sp_magical_generic_reward_race_tech_3
		sp_magical_generic_reward_resource_scarcity
		sp_magical_generic_reward_critical_failure
	}
}

#######################
#######################

 ###   #### #### ###  
 #   # #    #    #  # 
 #   # ###  ###  ###  
 #   # #    #    # #  
 ###   #### #### #  # 

#######################
#######################


sp_long_term_tactical_divination = { ## Long-Term Tactical Divination
	specialization = specialization_magical
	#icon = GFX_sp_heavy_knight_armor

	project_tags = {
		sp_tag_magical
	}

	resource_cost = {
		resources = { 
			crystals = 3
		 }
	}

	visible = {
		FROM = {
			is_deer_race = yes
		}
	}

	available = {
		FROM = {
			has_idea = deer_race
			has_tech = techdeer_seer_b
		}
	}

	ai_will_do = {
		base = 1
	}

	complexity = sp_complexity.medium
	prototype_time = sp_time.prototype.medium
	breakthrough_cost = {
		specialization_magical = 1
	}


	project_output = {

		country_effects = {
			custom_effect_tooltip = {
				localization_key = SP_UNLOCK_TECH
				TECH = tech_long_term_tactical_divination
			}
			set_technology = {
				tech_long_term_tactical_divination = 1
				popup = no
			}
			custom_effect_tooltip = sp_long_term_tactical_divination_tp
			every_character = {
				limit = {
					is_unit_leader = yes 
				}
				add_logistics = 1
				add_planning = 1
			}
		}

	}

	generic_prototype_rewards = {
		sp_magical_generic_reward_scientist_xp_1
		sp_magical_generic_reward_scientist_xp_2
		sp_magical_generic_reward_scientist_xp_3
		sp_magical_generic_reward_major_progress_1
		sp_magical_generic_reward_major_progress_2
		sp_magical_generic_reward_major_progress_3
		sp_magical_generic_reward_test_failure_1
		sp_magical_generic_reward_test_failure_2
		sp_magical_generic_reward_test_failure_3
		sp_magical_generic_reward_magical_tech_1
		sp_magical_generic_reward_magical_tech_2
		sp_magical_generic_reward_magical_tech_3
		sp_magical_generic_reward_race_tech_1
		sp_magical_generic_reward_race_tech_2
		sp_magical_generic_reward_race_tech_3
		sp_magical_generic_reward_resource_scarcity
		sp_magical_generic_reward_critical_failure
	}
}

############################################################
############################################################

 ####  #  ##  #   #  ###  #   # ####    ####   ###   ###
 #   # # #  # ## ## #   # ##  # #   #   #   # #   # #
 #   # # #### # # # #   # # # # #   #   #   # #   # #  ##
 #   # # #  # # # # #   # #  ## #   #   #   # #   # #   #
 ####  # #  # # # #  ###  #   # ####    ####   ###   ###

############################################################
############################################################