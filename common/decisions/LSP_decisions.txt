LSP_crazy_instability = {
	LSP_anti_independence_movement = {

		icon = generic_civil_support

		allowed = {
			original_tag = LSP
		}
		available = {
		 custom_trigger_tooltip = {
		  tooltip = democracy_conditions
		  
			OR = {
				DEMOCRATIC < 0.5
				has_government = fascism
				has_government = communism
				has_country_flag = LSP_chessmayor##Only if the country has been stabilised
				is_ai = yes
			}
		 
		}
		}

		days_mission_timeout = 180
		#days_remove = 1

		activation = {
			DEMOCRATIC > 0.5
		}

		fixed_random_seed = no

		fire_only_once = yes

		is_good = no

		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout LSP_anti_independence_movement"
			country_event = { id =  lsp.3 }
		}
	}

	LSP_famine_coming = {

		icon = generic_civil_support

		allowed = {
			original_tag = LSP
		}
		available = {
			NOT = {
				has_idea = LSP_fragile_food_supply
				has_idea = LSP_famine
			}
		}

		days_mission_timeout = 300
		#days_remove = 1

		activation = {
			OR = {
				has_idea = LSP_fragile_food_supply
				has_idea = LSP_famine
			}
		}

		fixed_random_seed = no

		fire_only_once = no

		is_good = no

		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout LSP_famine_coming"
			country_event = { id =  lsp.29 }
		}
	}
	LSP_mayor_popularity_campaign = {

		icon = generic_civil_support

		allowed = {
			original_tag = LSP
		}
		available = {
			has_country_flag = LSP_chessmayor
		}

		days_mission_timeout = 50

		activation = {
			NOT = {
				has_country_flag = LSP_chessmayor
			}
		}

		fixed_random_seed = no
		fire_only_once = no
		is_good = yes

		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout LSP_mayor_popularity_campaign"
			add_popularity = {
				ideology = neutrality
				popularity = 0.05
			}
		}
	}
}
LSP_deal_with_famine = {
	LSP_mayor_trade_for_food_from = {
        icon = rice_bowl
        targets = { SCS EQS CRY STG OLE }
		targets_dynamic = yes
        target_trigger = {
            FROM = {
                OR = {
                    AND = {
                        original_tag = EQS
                        has_government = democratic
                    }
                    AND = {
                        original_tag = CRY
                        has_government = democratic
                    }
                    AND = {
                        original_tag = STG
                        NOT = {
                            has_government = fascism
                            has_food_shortages_STG = yes
                        }
                    }
                    AND = {
                        original_tag = OLE
                        NOT = {
                            has_government = fascism
                            has_government = communism
                        }
                    }
                }
            }
        }
        target_root_trigger = {
			has_government = neutrality
        }
        visible = {
			has_government = neutrality
			FROM = {
                exists = yes
                NOT = {
                    has_idea = LSP_trade_profits
                }
            }
        }
        available = {
          OR={
            has_completed_focus = LSP_establish_trade_relations
			}
        }
        cost = 40
        days_remove = 30
        ai_will_do = {
            factor = 200
        }
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove LSP_mayor_trade_for_food_from target: [From.GetName]"
            FROM = {
                country_event = {
                    id = lsp.33
                }
            }
        }
	}
	LSP_grow_food = {
		available = {
			has_completed_focus = LSP_encourage_farming_in_waffleland
		}
		visible = {

		}
		cost = 20

        ai_will_do = {
            factor = 200
        }
		days_remove = 60
		fixed_random_seed = no

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove LSP_grow_food"
			random_list = {
				60 = {
					country_event = lsp.37
				}
				20 = {
					country_event = lsp.38
				}
				20 = {
					country_event = lsp.39
				}
			}
		}
	}
	LSP_reduce_famine = {
		available = {
			OR = {
				has_completed_focus = LSP_encourage_farming_in_waffleland
				has_completed_focus = LSP_establish_trade_relations
			}
			custom_trigger_tooltip = {
				tooltip = LSP_costs_5_food
					check_variable = {
						LSP_food_supply > 4
					}
			}
		}
		visible = {

		}
		cost = 0

		ai_will_do = {
			base = 200
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision LSP_reduce_famine"
			custom_effect_tooltip = LSP_removes_5_food
			subtract_from_variable = { var = LSP_food_supply value = 5 }
			if = {
				limit = {
					has_idea = LSP_severe_famine
				}
				swap_ideas = {
					remove_idea = LSP_severe_famine
					add_idea = LSP_famine
				}
			}
			else_if = {
				limit = {
					has_idea = LSP_famine
				}
				swap_ideas = { remove_idea = LSP_famine add_idea = LSP_fragile_food_supply }
			}
			else_if = {
				limit = {
					has_idea = LSP_fragile_food_supply
				}
				remove_ideas = LSP_fragile_food_supply
			}
		}
	}
}
LSP_death_timer_cat = {
	LSP_death_timer = {

		icon = generic_civil_support

		allowed = {
			original_tag = LSP
		}
		visible = {
			NOT = {
				has_country_flag = LSP_rokenhar_dead
			}
		}
		available = {
			custom_trigger_tooltip = {
				tooltip = LSP_cant_be_stopped
				has_country_flag = LSP_rokenhar_dead
			}
		}

		days_mission_timeout = 365

		activation = {
			has_country_flag = LSP_death_timer_set
		}

		fixed_random_seed = no

		fire_only_once = yes

		is_good = no

		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout LSP_death_timer"
			custom_effect_tooltip = LSP_mayors_death_tt
			country_event = { id =  lsp.36 }
		}

	}

}
LSP_border_war_cat = {
	LSP_attack_whitetail = {
		icon = border_war

		available = {
			has_war = no
			has_full_control_of_state = 66
			divisions_in_state = {
				state = 66
				size > 0
			}
			NOT = {
				has_country_flag = LSP_defeat_in_border_war
			}
		}

		visible = {
			has_completed_focus = LSP_creep_north
			NOT = {
				owns_state = 41
			}
			owns_state = 66
			41 = {
				owner = { can_have_border_war_with_ROOT = yes }
			}
		}

		highlight_states = {
			highlight_state_targets = { 
				state = 41
			}
		}

		cost = 100
		days_re_enable = 90

		ai_will_do = {
			factor = 200
		}

		fire_only_once = no

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision LSP_attack_whitetail"
			start_border_war = {
				change_state_after_war = no
				attacker = {
					state = 66
					num_provinces = 4
					on_win = lsp.117
					on_lose = lsp.121
					on_cancel = lsp.122
				}

				defender = {
					state = 41
					num_provinces = 4
					on_win = lsp.123
					on_lose = lsp.125
					on_cancel = lsp.124
				}
			}
		}
	}
	LSP_attack_sorelli = {
		icon = border_war

		available = {
			has_war = no
			OR = {
				has_full_control_of_state = 41
				}
			divisions_in_state = {
				state = 41
				size > 0
			}
			NOT = {
				has_country_flag = LSP_defeat_in_border_war
			}
		}

		visible = {
			has_completed_focus = LSP_creep_north
			NOT = {
				owns_state = 95
			}
			owns_state = 41
			95 = {
				owner = { can_have_border_war_with_ROOT = yes }
			}
		}

		highlight_states = {
			highlight_state_targets = { 
				state = 95
			}
		}

		cost = 100
		days_re_enable = 1

		ai_will_do = {
			factor = 200
		}

		fire_only_once = no

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision LSP_attack_sorelli"
			start_border_war = {
				change_state_after_war = no
				attacker = {
					state = 41
					num_provinces = 4
					on_win = lsp.120
					on_lose = lsp.121
					on_cancel = lsp.122
				}

				defender = {
					state = 95
					num_provinces = 4
					on_win = lsp.123
					on_lose = lsp.125
					on_cancel = lsp.124
				}
			}
		}
	}
}

LSP_make_equestria_again = {
	LSP_form_equestria = {
		icon = celestia
		cost = 200
		fire_only_once = yes
		ai_will_do = {
			factor = 200
		}
		available = {
			EQS = {
				exists = no
			}
			ELF = {
				exists = no
			}
			NLR = {
				exists = no
			}
		}
		visible = {
			owns_state = 3
			owns_state = 75
			owns_state = 70
			owns_state = 74
			owns_state = 12
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision LSP_form_equestria"
			set_capital = { 
				state = 74 
				remember_old_capital = no
			}
            set_cosmetic_tag = LSP_equestria
			every_state = {
				limit = {
					OR = {
						is_core_of = EQS
						is_in_array = {
							state_original_cores = EQS
						}
					}
				}
				add_core_of = ROOT
			}
		}
	}
}