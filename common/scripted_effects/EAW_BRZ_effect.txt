# What are these for?
add_latest_tank_licence_to_root = {
	if = {
		limit = {
			has_tech = gwtank
		}
		create_production_license = {
			target = ROOT
			equipment = {
				type = gw_tank_equipment
			}
			cost_factor = 0
		}
	}
	else_if = {
		limit = {
			has_tech = basic_light_tank
		}
		create_production_license = {
			target = ROOT
			equipment = {
				type = light_tank_equipment_1
			}
			cost_factor = 0
		}
	}
	else_if = {
		limit = {
			has_tech = improved_light_tank
		}
		create_production_license = {
			target = ROOT
			equipment = {
				type = light_tank_equipment_2
			}
			cost_factor = 0
		}
	}
	else_if = {
		limit = {
			has_tech = advanced_light_tank
		}
		create_production_license = {
			target = ROOT
			equipment = {
				type = light_tank_equipment_3
			}
			cost_factor = 0
		}
	}
	else_if = {
		limit = {
			has_tech = advanced_light_tank_a
		}
		create_production_license = {
			target = ROOT
			equipment = {
				type = light_tank_equipment_x
			}
			cost_factor = 0
		}
	}
	else_if = {
		limit = {
			has_tech = advanced_light_tank_b
		}
		create_production_license = {
			target = ROOT
			equipment = {
				type = light_tank_equipment_x_2
			}
			cost_factor = 0
		}
	}

	if = {
		limit = {
			has_tech = basic_medium_tank
		}
		create_production_license = {
			target = ROOT
			equipment = {
				type = medium_tank_equipment_1
			}
			cost_factor = 0
		}
	}
	else_if = {
		limit = {
			has_tech = improved_medium_tank
		}
		create_production_license = {
			target = ROOT
			equipment = {
				type = medium_tank_equipment_2
			}
			cost_factor = 0
		}
	}
	else_if = {
		limit = {
			has_tech = advanced_medium_tank
		}
		create_production_license = {
			target = ROOT
			equipment = {
				type = medium_tank_equipment_3
			}
			cost_factor = 0
		}
	}

	if = {
		limit = {
			has_tech = main_battle_tank
		}
		create_production_license = {
			target = ROOT
			equipment = {
				type = modern_tank_equipment_1
			}
			cost_factor = 0
		}
	}
	else_if = {
		limit = {
			has_tech = main_battle_tank_a
		}
		create_production_license = {
			target = ROOT
			equipment = {
				type = modern_tank_equipment_x
			}
			cost_factor = 0
		}
	}
	else_if = {
		limit = {
			has_tech = main_battle_tank_b
		}
		create_production_license = {
			target = ROOT
			equipment = {
				type = modern_tank_equipment_x_2
			}
			cost_factor = 0
		}
	}
	else_if = {
		limit = {
			has_tech = main_battle_tank_c
		}
		create_production_license = {
			target = ROOT
			equipment = {
				type = modern_tank_equipment_x_3
			}
			cost_factor = 0
		}
	}
	else_if = {
		limit = {
			has_tech = main_battle_tank_d
		}
		create_production_license = {
			target = ROOT
			equipment = {
				type = modern_tank_equipment_x_4
			}
			cost_factor = 0
		}
	}
	else_if = {
		limit = {
			has_tech = main_battle_tank_e
		}
		create_production_license = {
			target = ROOT
			equipment = {
				type = modern_tank_equipment_x_5
			}
			cost_factor = 0
		}
	}

	if = {
		limit = {
			has_tech = basic_heavy_tank
		}
		create_production_license = {
			target = ROOT
			equipment = {
				type = heavy_tank_equipment_1
			}
			cost_factor = 0
		}
	}
	else_if = {
		limit = {
			has_tech = improved_heavy_tank
		}
		create_production_license = {
			target = ROOT
			equipment = {
				type = heavy_tank_equipment_2
			}
			cost_factor = 0
		}
	}
	else_if = {
		limit = {
			has_tech = advanced_heavy_tank
		}
		create_production_license = {
			target = ROOT
			equipment = {
				type = heavy_tank_equipment_3
			}
			cost_factor = 0
		}
	}
	
	if = {
		limit = {
			has_tech = super_heavy_tank
		}
		create_production_license = {
			target = ROOT
			equipment = {
				type = super_heavy_tank_equipment_1
			}
			cost_factor = 0
		}
	}
	else_if = {
		limit = {
			has_tech = super_heavy_tank_a
		}
		create_production_license = {
			target = ROOT
			equipment = {
				type = super_heavy_tank_equipment_x
			}
			cost_factor = 0
		}
	}
	else_if = {
		limit = {
			has_tech = super_heavy_tank_b
		}
		create_production_license = {
			target = ROOT
			equipment = {
				type = super_heavy_tank_equipment_x_2
			}
			cost_factor = 0
		}
	}
}

add_latest_infantry_equipment_licence_to_root = {
	if = {
		limit = {
			has_tech = infantry_weapons
		}
		create_production_license = {
			target = ROOT
			equipment = {
				type = infantry_equipment_0
			}
			cost_factor = 0
		}
	}
	else_if = {
		limit = {
			has_tech = infantry_weapons1
		}
		create_production_license = {
			target = ROOT
			equipment = {
				type = infantry_equipment_1
			}
			cost_factor = 0
		}
	}
	else_if = {
		limit = {
			has_tech = improved_infantry_weapons
		}
		create_production_license = {
			target = ROOT
			equipment = {
				type = infantry_equipment_2
			}
			cost_factor = 0
		}
	}
	else_if = {
		limit = {
			has_tech = advanced_infantry_weapons
		}
		create_production_license = {
			target = ROOT
			equipment = {
				type = infantry_equipment_3
			}
			cost_factor = 0
		}
	}
	else_if = {
		limit = {
			has_tech = advanced_infantry_weapons_b
		}
		create_production_license = {
			target = ROOT
			equipment = {
				type = infantry_equipment_x
			}
			cost_factor = 0
		}
	}
	else_if = {
		limit = {
			has_tech = advanced_infantry_weapons_e
		}
		create_production_license = {
			target = ROOT
			equipment = {
				type = infantry_equipment_x_2
			}
			cost_factor = 0
		}
	}

	if = {
		limit = {
			has_tech = magical_weapons
		}
		create_production_license = {
			target = ROOT
			equipment = {
				type = magical_equipment_1
			}
			cost_factor = 0
		}
	}
	else_if = {
		limit = {
			has_tech = magical_weapons1
		}
		create_production_license = {
			target = ROOT
			equipment = {
				type = magical_equipment_2
			}
			cost_factor = 0
		}
	}
	else_if = {
		limit = {
			has_tech = magical_weapons2
		}
		create_production_license = {
			target = ROOT
			equipment = {
				type = magical_equipment_3
			}
			cost_factor = 0
		}
	}
	else_if = {
		limit = {
			has_tech = magical_weapons3
		}
		create_production_license = {
			target = ROOT
			equipment = {
				type = magical_equipment_4
			}
			cost_factor = 0
		}
	}
}

# Explanaintion for the poor soul who has to understand this:
# I'm trying to generate 3 random event options, displayed in random order, out of 5 total. 
# First, I'm doing a 5-choose-3, to choose which event options will be displayed. These are assigned to three variables
# Then, I'm picking an order to display them, which assignes the first three variables to three other ones, 
# the ones used later in the options of the event code
BRZ_noble_virtue_investment_option_generator = {
	# Step 1: Choose which options to display
	set_variable = {
		investment_option_1 = 1 # Default
	}
	set_variable = {
		investment_option_2 = 2 # Default
	}
	set_variable = {
		investment_option_3 = 3 # Default
	}
	random_list = {
		1 = {
			set_variable = {
				investment_option_1 = 1
			}
			set_variable = {
				investment_option_2 = 2
			}
			set_variable = {
				investment_option_3 = 3
			}
		}
		1 = {
			set_variable = {
				investment_option_1 = 1
			}
			set_variable = {
				investment_option_2 = 2
			}
			set_variable = {
				investment_option_3 = 4
			}
		}
		1 = {
			set_variable = {
				investment_option_1 = 1
			}
			set_variable = {
				investment_option_2 = 2
			}
			set_variable = {
				investment_option_3 = 5
			}
		}
		1 = {
			set_variable = {
				investment_option_1 = 1
			}
			set_variable = {
				investment_option_2 = 3
			}
			set_variable = {
				investment_option_3 = 4
			}
		}
		1 = {
			set_variable = {
				investment_option_1 = 1
			}
			set_variable = {
				investment_option_2 = 3
			}
			set_variable = {
				investment_option_3 = 5
			}
		}
		1 = {
			set_variable = {
				investment_option_1 = 1
			}
			set_variable = {
				investment_option_2 = 4
			}
			set_variable = {
				investment_option_3 = 5
			}
		}
		1 = {
			set_variable = {
				investment_option_1 = 2
			}
			set_variable = {
				investment_option_2 = 3
			}
			set_variable = {
				investment_option_3 = 4
			}
		}
		1 = {
			set_variable = {
				investment_option_1 = 2
			}
			set_variable = {
				investment_option_2 = 3
			}
			set_variable = {
				investment_option_3 = 5
			}
		}
		1 = {
			set_variable = {
				investment_option_1 = 2
			}
			set_variable = {
				investment_option_2 = 4
			}
			set_variable = {
				investment_option_3 = 5
			}
		}
		1 = {
			set_variable = {
				investment_option_1 = 3
			}
			set_variable = {
				investment_option_2 = 4
			}
			set_variable = {
				investment_option_3 = 5
			}
		}
	}
	set_variable = {
		display_option_a = investment_option_1 # default
	}
	set_variable = {
		display_option_b = investment_option_2 # default
	}
	set_variable = {
		display_option_c = investment_option_3 # default
	}
	random_list = {
		1 = {
			set_variable = {
				display_option_a = investment_option_1
			}
			set_variable = {
				display_option_b = investment_option_2
			}
			set_variable = {
				display_option_c = investment_option_3
			}
		}
		1 = {
			set_variable = {
				display_option_a = investment_option_1
			}
			set_variable = {
				display_option_b = investment_option_3
			}
			set_variable = {
				display_option_c = investment_option_2
			}
		}
		1 = {
			set_variable = {
				display_option_a = investment_option_2
			}
			set_variable = {
				display_option_b = investment_option_1
			}
			set_variable = {
				display_option_c = investment_option_3
			}
		}
		1 = {
			set_variable = {
				display_option_a = investment_option_2
			}
			set_variable = {
				display_option_b = investment_option_3
			}
			set_variable = {
				display_option_c = investment_option_1
			}
		}
		1 = {
			set_variable = {
				display_option_a = investment_option_3
			}
			set_variable = {
				display_option_b = investment_option_1
			}
			set_variable = {
				display_option_c = investment_option_2
			}
		}
		1 = {
			set_variable = {
				display_option_a = investment_option_3
			}
			set_variable = {
				display_option_b = investment_option_2
			}
			set_variable = {
				display_option_c = investment_option_1
			}
		}
	}
}

BRZ_noble_virtue_investment_option_a_effect = {
	if = {
		limit = {
			check_variable = { display_option_a = 1 } # consumer goods
		}
		if = {
			limit = {
				check_variable = {	BRZ_noble_virtue_cg_cost = 1 }
			}
			add_timed_idea = {
				idea = BRZ_consumer_goods_investment_low
				days = 180
			}
		}
		if = {
			limit = {
				check_variable = {	BRZ_noble_virtue_cg_cost = 2 }
			}
			add_timed_idea = {
				idea = BRZ_consumer_goods_investment_med
				days = 180
			}
		}
		if = {
			limit = {
				check_variable = {	BRZ_noble_virtue_cg_cost = 3 }
			}
			add_timed_idea = {
				idea = BRZ_consumer_goods_investment_high
				days = 180
			}
		}
	}
	if = {
		limit = {
			check_variable = { display_option_a = 2 } # political power
		}
		add_political_power = BRZ_noble_virtue_pp_cost
	}
	if = {
		limit = {
			check_variable = { display_option_a = 3 } # command power
		}
		add_command_power = BRZ_noble_virtue_cp_cost
	}
	if = {
		limit = {
			check_variable = { display_option_a = 4 } # max production efficiency
		}
		if = {
			limit = {
				check_variable = {	BRZ_noble_virtue_me_cost = 1 }
			}
			add_timed_idea = {
				idea = BRZ_max_eff_investment_low
				days = 180
			}
		}
		if = {
			limit = {
				check_variable = {	BRZ_noble_virtue_me_cost = 2 }
			}
			add_timed_idea = {
				idea = BRZ_max_eff_investment_med
				days = 180
			}
		}
		if = {
			limit = {
				check_variable = {	BRZ_noble_virtue_me_cost = 3 }
			}
			add_timed_idea = {
				idea = BRZ_max_eff_investment_high
				days = 180
			}
		}
	}
	if = {
		limit = {
			check_variable = { display_option_a = 5 } # stability
		}
		add_stability = BRZ_noble_virtue_stab_cost
	}
}

BRZ_noble_virtue_investment_option_b_effect = {
	if = {
		limit = {
			check_variable = { display_option_b = 1 } # consumer goods
		}
		if = {
			limit = {
				check_variable = {	BRZ_noble_virtue_cg_cost = 1 }
			}
			add_timed_idea = {
				idea = BRZ_consumer_goods_investment_low
				days = 180
			}
		}
		if = {
			limit = {
				check_variable = {	BRZ_noble_virtue_cg_cost = 2 }
			}
			add_timed_idea = {
				idea = BRZ_consumer_goods_investment_med
				days = 180
			}
		}
		if = {
			limit = {
				check_variable = {	BRZ_noble_virtue_cg_cost = 3 }
			}
			add_timed_idea = {
				idea = BRZ_consumer_goods_investment_high
				days = 180
			}
		}
	}
	if = {
		limit = {
			check_variable = { display_option_b = 2 } # political power
		}
		add_political_power = BRZ_noble_virtue_pp_cost
	}
	if = {
		limit = {
			check_variable = { display_option_b = 3 } # command power
		}
		add_command_power = BRZ_noble_virtue_cp_cost
	}
	if = {
		limit = {
			check_variable = { display_option_b = 4 } # max production efficiency
		}
		if = {
			limit = {
				check_variable = {	BRZ_noble_virtue_me_cost = 1 }
			}
			add_timed_idea = {
				idea = BRZ_max_eff_investment_low
				days = 180
			}
		}
		if = {
			limit = {
				check_variable = {	BRZ_noble_virtue_me_cost = 2 }
			}
			add_timed_idea = {
				idea = BRZ_max_eff_investment_med
				days = 180
			}
		}
		if = {
			limit = {
				check_variable = {	BRZ_noble_virtue_me_cost = 3 }
			}
			add_timed_idea = {
				idea = BRZ_max_eff_investment_high
				days = 180
			}
		}
	}
	if = {
		limit = {
			check_variable = { display_option_b = 5 } # stability
		}
		add_stability = BRZ_noble_virtue_stab_cost
	}
}

BRZ_noble_virtue_investment_option_c_effect = {
	if = {
		limit = {
			check_variable = { display_option_c = 1 } # consumer goods
		}
		if = {
			limit = {
				check_variable = {	BRZ_noble_virtue_cg_cost = 1 }
			}
			add_timed_idea = {
				idea = BRZ_consumer_goods_investment_low
				days = 180
			}
		}
		if = {
			limit = {
				check_variable = {	BRZ_noble_virtue_cg_cost = 2 }
			}
			add_timed_idea = {
				idea = BRZ_consumer_goods_investment_med
				days = 180
			}
		}
		if = {
			limit = {
				check_variable = {	BRZ_noble_virtue_cg_cost = 3 }
			}
			add_timed_idea = {
				idea = BRZ_consumer_goods_investment_high
				days = 180
			}
		}
	}
	if = {
		limit = {
			check_variable = { display_option_c = 2 } # political power
		}
		add_political_power = BRZ_noble_virtue_pp_cost
	}
	if = {
		limit = {
			check_variable = { display_option_c = 3 } # command power
		}
		add_command_power = BRZ_noble_virtue_cp_cost
	}
	if = {
		limit = {
			check_variable = { display_option_c = 4 } # max production efficiency
		}
		if = {
			limit = {
				check_variable = {	BRZ_noble_virtue_me_cost = 1 }
			}
			add_timed_idea = {
				idea = BRZ_max_eff_investment_low
				days = 180
			}
		}
		if = {
			limit = {
				check_variable = {	BRZ_noble_virtue_me_cost = 2 }
			}
			add_timed_idea = {
				idea = BRZ_max_eff_investment_med
				days = 180
			}
		}
		if = {
			limit = {
				check_variable = {	BRZ_noble_virtue_me_cost = 3 }
			}
			add_timed_idea = {
				idea = BRZ_max_eff_investment_high
				days = 180
			}
		}
	}
	if = {
		limit = {
			check_variable = { display_option_c = 5 } # stability
		}
		add_stability = BRZ_noble_virtue_stab_cost
	}
}

BRZ_puppeted_by_grover_ii = {
	# Load the flavour focus tree - keep_completed for Industry/Army trees
	load_focus_tree = {
		tree = bronzehill_grover_ii_tree
		keep_completed = yes
	}
	
	# If Powerstruggle, end immediately - Ignatius stays in Power
	if = {
		limit = {
			has_idea = BRZ_powerstruggle_in_the_council
		}
		remove_ideas = BRZ_powerstruggle_in_the_council
		
		remove_mission = BRZ_council_timeout_mission
		remove_mission = BRZ_copperhill_influence_mission
		remove_mission = BRZ_loudbark_influence_mission
		if = {
			limit = {
				has_country_flag = BRZ_luxembark_in_the_council
			}
			remove_mission = BRZ_luxembark_influence_mission
		} else = {
			remove_mission = BRZ_barkingsun_influence_mission
		}
		
		add_popularity = {
			ideology = neutrality
			popularity = 0.1
		}
	}
	
	# Remove maluses that would be removed by the now unavailable focus tree
	if = {
		limit = {
			has_idea = BRZ_disloyal_army
		}
		remove_ideas = BRZ_disloyal_army
	}
	if = {
		limit = {
			has_idea = BRZ_socialist_agitation
		}
		remove_ideas = BRZ_socialist_agitation
	}
	if = {
		limit = {
			has_idea = BRZ_lingering_socialist_agitation
		}
		remove_ideas = BRZ_lingering_socialist_agitation
	}
	if = {
		limit = {
			has_idea = BRZ_unrest_in_academia
		}
		remove_ideas = BRZ_unrest_in_academia
	}
	if = {
		limit = {
			has_idea = BRZ_hostile_ignatius
		}
		remove_ideas = BRZ_hostile_ignatius
	}
	if = {
		limit = {
			has_idea = BRZ_hostile_bronzehill_council
		}
		remove_ideas = BRZ_hostile_bronzehill_council
	}
}